<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2022 the original author or authors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>eu.michael-simons</groupId>
		<artifactId>garmin-babel</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>garmin-babel.app</artifactId>
	<properties>
		<executable-suffix/>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>${commons-csv.version}</version>
		</dependency>
		<dependency>
			<groupId>tech.units</groupId>
			<artifactId>indriya</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration combine.self="append">
					<annotationProcessorPaths>
						<path>
							<groupId>info.picocli</groupId>
							<artifactId>picocli-codegen</artifactId>
							<version>${picocli.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.moditect</groupId>
				<artifactId>moditect-maven-plugin</artifactId>
				<version>${moditect-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>add-module-infos</id>
						<goals>
							<goal>add-module-info</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<outputDirectory>${project.build.directory}/modules</outputDirectory>
							<overwriteExistingFiles>true</overwriteExistingFiles>
							<modules>
								<module>
									<artifact>
										<groupId>javax.inject</groupId>
										<artifactId>javax.inject</artifactId>
										<version>1</version>
									</artifact>
									<moduleInfoSource>module javax.inject {
										exports javax.inject;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.commons</groupId>
										<artifactId>commons-csv</artifactId>
										<version>${commons-csv.version}</version>
									</artifact>
									<moduleInfoSource>module commons.csv {
										exports org.apache.commons.csv;
										}
									</moduleInfoSource>
								</module>
							</modules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jreleaser</groupId>
				<artifactId>jreleaser-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<executable-suffix>.exe</executable-suffix>
			</properties>
		</profile>
		<profile>
			<id>noarch</id>
			<activation>
				<property>
					<name>noarch</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>appassembler-maven-plugin</artifactId>
						<version>${appassembler-maven-plugin.version}</version>
						<configuration>
							<assembleDirectory>${project.build.directory}/assembly</assembleDirectory>
							<repositoryLayout>flat</repositoryLayout>
							<repositoryName>lib</repositoryName>
							<programs>
								<program>
									<mainClass>${name-of-main-class}</mainClass>
									<id>${project.parent.artifactId}</id>
								</program>
							</programs>
						</configuration>
						<executions>
							<execution>
								<id>make-distribution</id>
								<goals>
									<goal>assemble</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<encoding>UTF-8</encoding>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
						<executions>
							<execution>
								<id>assembly-java</id>
								<goals>
									<goal>single</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<outputDirectory>${project.basedir}/../target/artifacts</outputDirectory>
									<finalName>${project.parent.artifactId}-${project.version}</finalName>
									<attach>false</attach>
									<descriptors>
										<descriptor>src/main/assembly/assembly-java.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>native</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native.maven.plugin.version}</version>
						<extensions>true</extensions>
						<configuration>
							<requiredVersion>22.3</requiredVersion>
							<mainClass>${name-of-main-class}</mainClass>
							<imageName>${project.parent.artifactId}</imageName>
							<buildArgs>
								<arg>--no-fallback</arg>
							</buildArgs>
						</configuration>
						<executions>
							<execution>
								<id>create-native-image</id>
								<goals>
									<goal>compile-no-fork</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>assembly-native</id>
								<goals>
									<goal>single</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<outputDirectory>${project.basedir}/../target/artifacts</outputDirectory>
									<finalName>${project.parent.artifactId}-${project.version}-${os.detected.classifier}-native</finalName>
									<attach>false</attach>
									<appendAssemblyId>false</appendAssemblyId>
									<descriptors>
										<descriptor>src/main/assembly/assembly-native.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
